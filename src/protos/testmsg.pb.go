// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testmsg.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 测试普通消息
type ReqTest struct {
	Info                 *TestInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReqTest) Reset()         { *m = ReqTest{} }
func (m *ReqTest) String() string { return proto.CompactTextString(m) }
func (*ReqTest) ProtoMessage()    {}
func (*ReqTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcadc46d8d7f388e, []int{0}
}

func (m *ReqTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTest.Unmarshal(m, b)
}
func (m *ReqTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTest.Marshal(b, m, deterministic)
}
func (m *ReqTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTest.Merge(m, src)
}
func (m *ReqTest) XXX_Size() int {
	return xxx_messageInfo_ReqTest.Size(m)
}
func (m *ReqTest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTest.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTest proto.InternalMessageInfo

func (m *ReqTest) GetInfo() *TestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 测试普通消息
type ResTest struct {
	Info                 *TestInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResTest) Reset()         { *m = ResTest{} }
func (m *ResTest) String() string { return proto.CompactTextString(m) }
func (*ResTest) ProtoMessage()    {}
func (*ResTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcadc46d8d7f388e, []int{1}
}

func (m *ResTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResTest.Unmarshal(m, b)
}
func (m *ResTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResTest.Marshal(b, m, deterministic)
}
func (m *ResTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResTest.Merge(m, src)
}
func (m *ResTest) XXX_Size() int {
	return xxx_messageInfo_ResTest.Size(m)
}
func (m *ResTest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResTest.DiscardUnknown(m)
}

var xxx_messageInfo_ResTest proto.InternalMessageInfo

func (m *ResTest) GetInfo() *TestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 测试推送
type PushTest struct {
	Info                 *TestInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PushTest) Reset()         { *m = PushTest{} }
func (m *PushTest) String() string { return proto.CompactTextString(m) }
func (*PushTest) ProtoMessage()    {}
func (*PushTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcadc46d8d7f388e, []int{2}
}

func (m *PushTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushTest.Unmarshal(m, b)
}
func (m *PushTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushTest.Marshal(b, m, deterministic)
}
func (m *PushTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushTest.Merge(m, src)
}
func (m *PushTest) XXX_Size() int {
	return xxx_messageInfo_PushTest.Size(m)
}
func (m *PushTest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushTest.DiscardUnknown(m)
}

var xxx_messageInfo_PushTest proto.InternalMessageInfo

func (m *PushTest) GetInfo() *TestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 测试广播
type BCTest struct {
	Info                 *TestInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BCTest) Reset()         { *m = BCTest{} }
func (m *BCTest) String() string { return proto.CompactTextString(m) }
func (*BCTest) ProtoMessage()    {}
func (*BCTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fcadc46d8d7f388e, []int{3}
}

func (m *BCTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BCTest.Unmarshal(m, b)
}
func (m *BCTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BCTest.Marshal(b, m, deterministic)
}
func (m *BCTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BCTest.Merge(m, src)
}
func (m *BCTest) XXX_Size() int {
	return xxx_messageInfo_BCTest.Size(m)
}
func (m *BCTest) XXX_DiscardUnknown() {
	xxx_messageInfo_BCTest.DiscardUnknown(m)
}

var xxx_messageInfo_BCTest proto.InternalMessageInfo

func (m *BCTest) GetInfo() *TestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqTest)(nil), "protos.ReqTest")
	proto.RegisterType((*ResTest)(nil), "protos.ResTest")
	proto.RegisterType((*PushTest)(nil), "protos.PushTest")
	proto.RegisterType((*BCTest)(nil), "protos.BCTest")
}

func init() { proto.RegisterFile("testmsg.proto", fileDescriptor_fcadc46d8d7f388e) }

var fileDescriptor_fcadc46d8d7f388e = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x49, 0x2d, 0x2e,
	0xc9, 0x2d, 0x4e, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x52, 0x3c,
	0xc9, 0xf9, 0xb9, 0xb9, 0xf9, 0x79, 0x10, 0x51, 0x25, 0x7d, 0x2e, 0xf6, 0xa0, 0xd4, 0xc2, 0x90,
	0xd4, 0xe2, 0x12, 0x21, 0x15, 0x2e, 0x96, 0xcc, 0xbc, 0xb4, 0x7c, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0x6e, 0x23, 0x01, 0x88, 0x82, 0x62, 0x3d, 0x90, 0x9c, 0x67, 0x5e, 0x5a, 0x7e, 0x10, 0x58, 0x16,
	0xa2, 0xa1, 0x98, 0x04, 0x0d, 0x06, 0x5c, 0x1c, 0x01, 0xa5, 0xc5, 0x19, 0x24, 0xe8, 0xd0, 0xe3,
	0x62, 0x73, 0x72, 0x26, 0x5e, 0x7d, 0x12, 0xc4, 0x67, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x70, 0x2b, 0xfd, 0x04, 0xf1, 0x00, 0x00, 0x00,
}
